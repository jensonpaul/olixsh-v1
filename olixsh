#!/bin/bash
###
# Interpréteur olixsh
# ==============================================================================
# Usage : TODO
#  olixsh
# ------------------------------------------------------------------------------
# Codes de sorties
#  31 : Ne pas envoyer de mail même si le paramètre -m est renseigné
# ------------------------------------------------------------------------------
# @package olixsh
# @author Olivier
# @version 2.0
# @created 06/04/2014
##

#set -e

###
# Constantes
##
OLIX_RELEASE=false
OLIX_VERSION="2.0"
OLIX_REVISION="28"



###
# Détermination où se trouve le framework pour s'y placer
##
if [ -L $0 ]; then
    OLIX_ROOT_SCRIPT=$(readlink $0)
else
    OLIX_ROOT_SCRIPT=$0
fi
OLIX_ROOT=$(dirname $OLIX_ROOT_SCRIPT)
cd ${OLIX_ROOT}


###
# Chargement des librairies
##
source lib/constant.inc.sh
source lib/core.inc.sh
source lib/config.inc.sh
source lib/module.inc.sh
source lib/color.inc.sh
source lib/stdin.inc.sh
source lib/stdout.inc.sh
source lib/logger.inc.sh
source lib/filesystem.inc.sh
source lib/mysql.inc.sh


logger_checkLogger


###
# Gestion des options et arguments
##
OLIX_MODULE=""
OLIX_ARGS=""
while [[ $# -ge 1 ]]; do
    case $1 in
        -d|--debug) 
            OLIX_OPTION_VERBOSEDEBUG=true
            OLIX_OPTION_VERBOSE=true
            OLIX_LOGGER_LEVEL="debug"
        ;;
        -v|--verbose) 
            OLIX_OPTION_VERBOSE=true
            OLIX_LOGGER_LEVEL="info"
        ;;
        --no-warnings)
            OLIX_OPTION_WARNINGS=false
        ;;
        -h|--help)
            OLIX_OPTION_HELP=true
        ;;
        --version)
           stdout_printVersion
           core_exit 0
        ;;
        
        *)  if [[ -z ${OLIX_MODULE} ]]; then
                OLIX_MODULE=$1
            else
                OLIX_ARGS="${OLIX_ARGS} $1"
            fi
            #break
        ;;
    esac
    shift
done

logger_info "Version : ${OLIX_VERSION}, Revision : ${OLIX_REVISION}, Release : ${OLIX_RELEASE}"

logger_debug "OLIX_MODULE=${OLIX_MODULE}"
logger_debug "OLIX_ARGS=${OLIX_ARGS}"


###
# Affichage de l'aide
##
[[ -z ${OLIX_MODULE} && ${OLIX_OPTION_HELP} == true ]] && stdout_printUsage && core_exit 0


###
# Installation de OLIXSH
##
if [[ "${OLIX_MODULE}" == "install:olixsh" ]]; then
    module_execute "install:olixsh"
fi


###
# Chargement de la configuration principale
##
core_checkInstall
core_loadConfiguration


###
# Execution du module
##
if [[ ! -z ${OLIX_MODULE} ]]; then
    [[ ${OLIX_OPTION_HELP} == true ]] && module_printUsage "${OLIX_MODULE}" && core_exit 0
    module_execute "${OLIX_MODULE}"
fi

module_readChoice
if [[ ! -z ${OLIX_MODULE} ]]; then
    module_execute "${OLIX_MODULE}"
fi

core_exit 0
